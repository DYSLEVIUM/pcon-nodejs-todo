{"version":3,"sources":["api/publicIP.ts","api/notes.ts","components/NoteListItem/NoteListItem.tsx","components/NotesList/NoteList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getPublicId","fetch","method","headers","then","res","json","endPoint","addNote","Note","a","JSON","ip","publicId","stringify","body","getAllNotes","updateNote","noteId","newNote","NoteListItem","props","useState","isEditActive","setIsEditActive","titleRef","useRef","descriptionRef","editDoneClicked","title","current","innerText","description","note","deleteClicked","onDeleteNote","className","contentEditable","suppressContentEditableWarning","style","cursor","ref","onClick","display","NoteList","notes","setNotes","isCanceled","setIsCanceled","useEffect","addClicked","div","initial","opacity","translateY","animate","transition","delay","map","index","reverse","type","App","main","href","rel","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5afe4f92.chunk.js","sourcesContent":["import PublicIP from '../models/PublicIP';\r\n\r\nexport function getPublicId(): Promise<PublicIP> {\r\n  return fetch('https://api.ipify.org/?format=json', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((res: Response) => res.json());\r\n}\r\n","import NoteInterface from '../models/NoteInterface';\r\nimport { getPublicId } from './publicIP';\r\n\r\n//  !   change endpoint later\r\n// const endPoint = 'http://localhost/api'; //  development endpoint\r\nconst endPoint = '/api'; //  production endpoint\r\nexport async function addNote(Note: NoteInterface): Promise<Response> {\r\n  return fetch(`${endPoint}/addNote`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      ...Note,\r\n      publicId: await getPublicId().then((res) => res.ip),\r\n    }),\r\n  }).then((res: Response) => res.json());\r\n}\r\n\r\nexport function getAllNotes(): Promise<NoteInterface[]> {\r\n  return fetch(`${endPoint}/getNotes`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((res: Response) => res.json());\r\n}\r\n\r\nexport function getNote(noteId: number): Promise<NoteInterface> {\r\n  return fetch(`${endPoint}/getNote/${noteId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((res: Response) => res.json());\r\n}\r\n\r\nexport async function updateNote(\r\n  noteId: number,\r\n  newNote: NoteInterface\r\n): Promise<Response> {\r\n  return fetch(`${endPoint}/updateNote/${noteId}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      ...newNote,\r\n      publicId: await getPublicId().then((res) => res.ip),\r\n    }),\r\n  }).then((res: Response) => res.json());\r\n}\r\n\r\nexport function deleteNote(noteId: number): Promise<Response> {\r\n  return fetch(`${endPoint}/deleteNote/${noteId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((res: Response) => res.json());\r\n}\r\n","import { useState, useRef } from 'react';\r\nimport { updateNote, deleteNote } from '../../api/notes';\r\nimport NoteInterface from '../../models/NoteInterface';\r\nimport './NoteListItem.scss';\r\n\r\nexport default function NoteListItem(props: any) {\r\n  const [isEditActive, setIsEditActive] = useState<boolean>(false);\r\n\r\n  let titleRef = useRef<HTMLDivElement>(null);\r\n  let descriptionRef = useRef<HTMLDivElement>(null);\r\n\r\n  const editDoneClicked = async () => {\r\n    const newNote: NoteInterface = {\r\n      title: titleRef.current?.innerText || '',\r\n      description: descriptionRef.current?.innerText || '',\r\n    };\r\n\r\n    setIsEditActive(false);\r\n    await updateNote(props.note.noteId, newNote);\r\n  };\r\n\r\n  const deleteClicked = async () => {\r\n    await deleteNote(props.note.noteId);\r\n    props.onDeleteNote();\r\n  };\r\n\r\n  return (\r\n    <div className=\"noteListItemContainer\">\r\n      <div className=\"titleContainer\">\r\n        <div\r\n          className=\"noteTitle\"\r\n          contentEditable={isEditActive ? true : false}\r\n          suppressContentEditableWarning={true}\r\n          style={isEditActive ? { cursor: 'text' } : { cursor: 'default' }}\r\n          ref={titleRef}\r\n        >\r\n          {props.note.title}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"descriptionContainer\">\r\n        <div\r\n          className=\"noteDesc\"\r\n          contentEditable={isEditActive ? true : false}\r\n          suppressContentEditableWarning={true}\r\n          style={isEditActive ? { cursor: 'text' } : { cursor: 'default' }}\r\n          ref={descriptionRef}\r\n        >\r\n          {props.note.description}\r\n        </div>\r\n      </div>\r\n      <div className=\"btnContainer\">\r\n        <button\r\n          onClick={editDoneClicked}\r\n          style={isEditActive ? { display: 'block' } : { display: 'none' }}\r\n          className=\"doneBtn\"\r\n        >\r\n          Done\r\n        </button>\r\n        <button\r\n          onClick={() => setIsEditActive(true)}\r\n          style={isEditActive ? { display: 'none' } : { display: 'block' }}\r\n          className=\"editBtn\"\r\n        >\r\n          Edit\r\n        </button>\r\n        <button onClick={deleteClicked} className=\"deleteBtn\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport NoteListItem from '../NoteListItem/NoteListItem';\r\n\r\nimport './NoteList.scss';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport NoteInterface from '../../models/NoteInterface';\r\n\r\nimport { getAllNotes, addNote } from '../../api/notes';\r\n\r\nexport default function NoteList() {\r\n  const [notes, setNotes] = useState<NoteInterface[]>([]);\r\n  const [isCanceled, setIsCanceled] = useState<boolean>(false);\r\n\r\n  let titleRef = useRef<HTMLDivElement>(null);\r\n  let descriptionRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!isCanceled) {\r\n      (async () => {\r\n        await getAllNotes().then((res: NoteInterface[]) => setNotes(res));\r\n      })();\r\n      setIsCanceled(true);\r\n    }\r\n  }, [isCanceled]);\r\n\r\n  const addClicked = async () => {\r\n    const newNote: NoteInterface = {\r\n      title: titleRef.current?.innerText || '',\r\n      description: descriptionRef.current?.innerText || '',\r\n    };\r\n\r\n    await addNote(newNote);\r\n\r\n    if (titleRef.current) titleRef.current.innerText = '';\r\n    if (descriptionRef.current) descriptionRef.current.innerText = '';\r\n\r\n    await getAllNotes().then((res: NoteInterface[]) => setNotes(res));\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"noteListContainerWrapper\"\r\n      initial={{ opacity: 0, translateY: 25 }}\r\n      animate={{\r\n        opacity: 1,\r\n        translateY: 0,\r\n      }}\r\n      transition={{ delay: 1 }}\r\n    >\r\n      <div className=\"noteListContainer\">\r\n        {notes\r\n          .map((note: NoteInterface, index) => {\r\n            return (\r\n              <NoteListItem\r\n                key={index}\r\n                note={note}\r\n                onDeleteNote={() => setIsCanceled(false)}\r\n              />\r\n            );\r\n          })\r\n          .reverse()}\r\n      </div>\r\n\r\n      <div className=\"addNoteContainer\">\r\n        <div className=\"noteTitleContainer\">\r\n          <div className=\"heading\">Note Title</div>\r\n          <div\r\n            className=\"noteTitle\"\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n            ref={titleRef}\r\n          ></div>\r\n        </div>\r\n        <div className=\"noteDescriptionContainer\">\r\n          <div className=\"heading\">Note Description</div>\r\n          <div\r\n            className=\"noteDescription\"\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n            ref={descriptionRef}\r\n          ></div>\r\n        </div>\r\n        <button type=\"submit\" onClick={addClicked} className=\"addBtn\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n","import './App.scss';\nimport NoteList from './components/NotesList/NoteList';\n\nimport { motion } from 'framer-motion';\nfunction App() {\n  return (\n    <motion.main\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ delay: 1 }}\n    >\n      <div className=\"title\">Pcon Nodejs Todo App</div>\n      <NoteList />\n      <div className=\"disclaimer\">\n        <p>\n          <a\n            href=\"https://github.com/DYSLEVIUM/pcon-nodejs-todo\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Click to open repository in github.\n          </a>\n        </p>\n        <p>\n          Please don't post any NSFW content. I am recording the public ip as\n          well. 😅\n        </p>\n      </div>\n    </motion.main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}