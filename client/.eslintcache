[{"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\reportWebVitals.ts":"1","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\App.tsx":"2","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\index.tsx":"3","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\components\\NotesList\\NoteList.tsx":"4","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\components\\NoteListItem\\NoteListItem.tsx":"5","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\api\\notes.ts":"6","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\api\\publicIP.ts":"7"},{"size":425,"mtime":1608646871676,"results":"8","hashOfConfig":"9"},{"size":176,"mtime":1611167384931,"results":"10","hashOfConfig":"9"},{"size":501,"mtime":1611078816324,"results":"11","hashOfConfig":"9"},{"size":2168,"mtime":1611177949423,"results":"12","hashOfConfig":"9"},{"size":2116,"mtime":1611175819501,"results":"13","hashOfConfig":"9"},{"size":1732,"mtime":1611220602647,"results":"14","hashOfConfig":"9"},{"size":287,"mtime":1611144369212,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pzulwv",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\reportWebVitals.ts",[],"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\App.tsx",[],"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\index.tsx",[],"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\components\\NotesList\\NoteList.tsx",["31"],"import { useState, useEffect, useRef } from 'react';\r\nimport NoteListItem from '../NoteListItem/NoteListItem';\r\n\r\nimport './NoteList.scss';\r\n\r\nimport NoteInterface from '../../models/NoteInterface';\r\n\r\nimport { getAllNotes, addNote } from '../../api/notes';\r\nimport { title } from 'process';\r\n\r\nexport default function NoteList() {\r\n  const [notes, setNotes] = useState<NoteInterface[]>([]);\r\n\r\n  let titleRef = useRef<HTMLDivElement>(null);\r\n  let descriptionRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getAllNotes().then((res: NoteInterface[]) => setNotes(res));\r\n    })();\r\n  }, []);\r\n\r\n  const addClicked = async () => {\r\n    const newNote: NoteInterface = {\r\n      title: titleRef.current?.innerText || '',\r\n      description: descriptionRef.current?.innerText || '',\r\n    };\r\n\r\n    await addNote(newNote);\r\n\r\n    if (titleRef.current) titleRef.current.innerText = '';\r\n    if (descriptionRef.current) descriptionRef.current.innerText = '';\r\n\r\n    await getAllNotes().then((res: NoteInterface[]) => setNotes(res));\r\n  };\r\n\r\n  return (\r\n    <div className=\"noteListContainerWrapper\">\r\n      <div className=\"noteListContainer\">\r\n        {notes\r\n          .map((note: NoteInterface, index) => {\r\n            return <NoteListItem key={index} note={note} />;\r\n          })\r\n          .reverse()}\r\n      </div>\r\n\r\n      <div className=\"addNoteContainer\">\r\n        <div className=\"noteTitleContainer\">\r\n          <div className=\"heading\">Note Title</div>\r\n          <div\r\n            className=\"noteTitle\"\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n            ref={titleRef}\r\n          ></div>\r\n        </div>\r\n        <div className=\"noteDescriptionContainer\">\r\n          <div className=\"heading\">Note Description</div>\r\n          <div\r\n            className=\"noteDescription\"\r\n            contentEditable={true}\r\n            suppressContentEditableWarning={true}\r\n            ref={descriptionRef}\r\n          ></div>\r\n        </div>\r\n        <button type=\"submit\" onClick={addClicked} className=\"addBtn\">\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\components\\NoteListItem\\NoteListItem.tsx",[],"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\api\\notes.ts",[],"D:\\PCON Mentorship\\pcon-nodejs\\todo\\client\\src\\api\\publicIP.ts",[],{"ruleId":"32","severity":1,"message":"33","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":15},"@typescript-eslint/no-unused-vars","'title' is defined but never used.","Identifier","unusedVar"]